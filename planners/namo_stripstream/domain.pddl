(define (domain namo)
    (:requirements :strips :equality)
    (:predicates (Pickable ?o)
                 (Grasp ?g)
                 (GraspConf ?gc)
                 (GraspTransform ?o ?g ?q ?g_config)
                 (EmptyArm)
                 (Holding ?o)
                 (BaseConf ?q)
                 (PlaceConf ?o ?p ?q)
                 (AtPose ?o ?p)
                 (AtConf ?q)
                 (InRegion ?o ?region)
                 (Region ?region)
                 (Contained ?p ?r)
                 (Pose ?o ?p)
                 (Robot ?robot)
                 (Picked ?o ?g ?pick_q ?g_config)
                 (Placed ?o)
                 (ObjPoseInRegion ?o ?obj_pose ?place_q ?region)
                 (BTraj ?q1 ?q2 ?traj)
                 (TrajPoseCollisionWithObject ?holding_o ?grasp ?pick_q ?g_config ?placed_obj ?placed_p ?q_goal ?traj)
                 (UnsafeBTrajWithObject ?holding_o ?grasp ?pick_q ?g_config ?q_goal ?traj)
                 (UnsafeBTraj ?q_init ?q_goal ?traj)
                 (TrajPoseCollision ?obstacle ?obstacle_pose ?q_init ?q_goal ?traj)
                 (GraspConfig ?g_config)
                 (BTrajWithObject ?o ?g ?pick_q ?q_goal ?traj)
                 (Placed ?obj)
    )

    (:action pickup
    :parameters (?o ?g ?pick_q ?g_config ?init_q ?obj_pose ?traj)
    :precondition (and (EmptyArm)
                       (Pickable ?o)
                       (AtConf ?init_q)
                       (Pose ?o ?obj_pose)
                       (AtPose ?o ?obj_pose)
                       (GraspTransform ?o ?g ?pick_q ?g_config)
                       (BTraj ?init_q ?pick_q ?traj)
                       (not (UnsafeBTraj ?init_q ?pick_q ?traj))
                       )
    :effect (and
               (Picked ?o ?g ?pick_q ?g_config)
               (AtConf ?pick_q)
               (not (AtConf ?q_init))
               (not (AtPose ?o ?obj_pose))
               (not (EmptyArm))
               (Holding ?o)
               )
    )

    (:action place
    :parameters(?obj ?grasp ?pick_q ?g_config ?place_q ?place_obj_pose ?region ?traj )
    :precondition (and
                       (Picked ?obj ?grasp ?pick_q ?g_config)
                       (AtConf ?pick_q)
                       (PlaceConf ?obj ?place_obj_pose ?place_q)
                       (ObjPoseInRegion ?obj ?place_obj_pose ?place_q ?region)
                       (BTrajWithObject ?obj ?grasp ?pick_q ?place_q ?traj)
                       ;(not (UnsafeBTrajWithObject ?obj ?grasp ?pick_q ?g_config ?place_q ?traj) )
                       )
    :effect (and (EmptyArm)
                 (not (Picked ?obj ?grasp ?pick_q ?g_config))
                 (InRegion ?obj ?region)
                 (Placed ?obj)
                 (AtPose ?obj ?place_obj_pose)
                 (not (AtConf ?pick_q))
                 (AtConf ?place_q)
                 )
    )

    (:derived (UnsafeBTraj ?q_init ?q_goal ?traj) (
        exists (?obstacle ?obstacle_pose)
                 (and
                    (AtPose ?obstacle ?obstacle_pose)
                    (TrajPoseCollision ?obstacle ?obstacle_pose ?q_init ?q_goal ?traj))
    ))

    (:derived (UnsafeBTrajWithObject ?holding_o ?grasp ?pick_q ?g_config ?place_q ?traj)(
        exists (?placed_o ?placed_p)
                 (and
                    (AtPose ?placed_o ?placed_p)
                    (TrajPoseCollisionWithObject ?holding_o ?grasp ?pick_q ?g_config ?placed_o ?placed_p ?place_q ?traj)
                 )
    ))
)


