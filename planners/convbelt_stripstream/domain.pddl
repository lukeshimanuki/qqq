(define (domain convbelt)
    (:requirements :strips :equality)
    (:predicates (Pickable ?o)
                  (ObjectZero ?o)
                  (ObjectOne ?o)
                  (ObjectTwo ?o)
                  (ObjectThree ?o)
                  (ObjectFour ?o)
                 (Grasp ?g)
                 (GraspConf ?gc)
                 (GraspTransform ?o ?g ?q)
                 (EmptyArm)
                 (Holding ?o ?g ?gc)
                 (BaseConf ?q)
                 (PlaceConf ?o ?p ?q)
                 (BTraj ?o ?g ?pick_q ?q2 ?traj)
                 (AtPose ?o ?p)
                 (AtConf ?r ?q)
                 (InLoadingRegion ?o)
                 (InLoading ?o)
                 (Region ?r)
                 (Contained ?p ?r)
                 (Pose ?o ?p)
                 (Robot ?robot)
                 (Picked ?o ?g ?pick_q)
                 (Placed ?o)
                 ;(UnsafeBTraj ?o ?g ?pick_q ?place_q ?t)
                 ;(UnsafeBTraj ?q)
                 ;(TrajPoseCollision ?q ?t ?o2 ?p2)
                 (TrajPoseCollision ?holding_o ?grasp ?pick_q ?placed_o ?placed_p ?place_q ?traj)
                 (UnsafeBTraj ?holding_o ?grasp ?pick_q ?place_q ?traj)
                 )

    (:action pickup_obj_zero
    :parameters (?objzero ?g ?absq ?obj1 ?obj2 ?obj3 ?obj4)
    :precondition (and (EmptyArm)
                       (ObjectZero ?objzero)
                       (ObjectOne ?obj1)
                       (ObjectTwo ?obj2)
                       (ObjectThree ?obj3)
                       (ObjectFour ?obj4)
                       (not (InLoadingRegion ?obj1))
                       (not (InLoadingRegion ?obj2))
                       (not (InLoadingRegion ?obj3))
                       (not (InLoadingRegion ?obj4))
                       (Pickable ?objzero)
                       (Grasp ?g)
                       (BaseConf ?absq)
                       (GraspTransform ?objzero ?g ?absq)
                       (not (InLoadingRegion ?obj0))
                       )
    :effect (and (Picked ?objzero ?g ?absq) (not (EmptyArm))))

    (:action pickup_obj_one
    :parameters (?obj1 ?g ?absq ?obj0 ?obj2 ?obj3 ?obj4)
    :precondition (and (EmptyArm)
                       (ObjectZero ?obj0)
                       (ObjectOne ?obj1)
                       (ObjectTwo ?obj2)
                       (ObjectThree ?obj3)
                       (ObjectFour ?obj4)
                       (InLoadingRegion ?obj0)
                       (not (InLoadingRegion ?obj1))
                       (not (InLoadingRegion ?obj2))
                       (not (InLoadingRegion ?obj3))
                       (not (InLoadingRegion ?obj4))
                       (Grasp ?g)
                       (BaseConf ?absq)
                       (GraspTransform ?obj1 ?g ?absq)
                       )
    :effect (and (Picked ?obj1 ?g ?absq) (not (EmptyArm))))

    (:action pickup_obj_two
    :parameters (?obj2 ?g ?absq ?obj0 ?obj1 ?obj3 ?obj4)
    :precondition (and (EmptyArm)
                       (ObjectZero ?obj0)
                       (ObjectOne ?obj1)
                       (ObjectTwo ?obj2)
                       (ObjectThree ?obj3)
                       (ObjectFour ?obj4)
                       (InLoadingRegion ?obj0)
                       (InLoadingRegion ?obj1)
                       (GraspTransform ?obj2 ?g ?absq)
                       (not (InLoadingRegion ?obj2))
                       (not (InLoadingRegion ?obj3))
                       (not (InLoadingRegion ?obj4))
                       (Grasp ?g)
                       (BaseConf ?absq)
                       )
    :effect (and (Picked ?obj2 ?g ?absq) (not (EmptyArm))))

    (:action pickup_obj_three
    :parameters (?obj3 ?g ?absq ?obj0 ?obj1 ?obj2 ?obj4)
    :precondition (and (EmptyArm)
                       (ObjectZero ?obj0)
                       (ObjectOne ?obj1)
                       (ObjectTwo ?obj2)
                       (ObjectThree ?obj3)
                       (ObjectFour ?obj4)
                       (InLoadingRegion ?obj0)
                       (InLoadingRegion ?obj1)
                       (InLoadingRegion ?obj2)
                       (GraspTransform ?obj3 ?g ?absq)
                       (not (InLoadingRegion ?obj3))
                       (not (InLoadingRegion ?obj4))
                       (Grasp ?g)
                       (BaseConf ?absq)
                       )
    :effect (and (Picked ?obj3 ?g ?absq) (not (EmptyArm))))

    (:action pickup_obj_four
    :parameters (?obj4 ?g ?absq ?obj0 ?obj1 ?obj2 ?obj3)
    :precondition (and (EmptyArm)
                       (ObjectZero ?obj0)
                       (ObjectOne ?obj1)
                       (ObjectTwo ?obj2)
                       (ObjectThree ?obj3)
                       (InLoadingRegion ?obj0)
                       (InLoadingRegion ?obj1)
                       (InLoadingRegion ?obj2)
                       (InLoadingRegion ?obj3)
                       (GraspTransform ?obj4 ?g ?absq)
                       (not (InLoadingRegion ?obj4))
                       (Grasp ?g)
                       (BaseConf ?absq)
                       )
    :effect (and (Picked ?obj4 ?g ?absq) (not (EmptyArm))))

    (:action place
    :parameters(?o ?g ?pick_q ?placement ?q2 ?traj)
    :precondition (and (Pickable ?o)
                       (Picked ?o ?g ?pick_q)
                       (Grasp ?g)
                       (BaseConf ?pick_q)
                       (GraspTransform ?o ?g ?pick_q)
                       (BaseConf ?q2)
                       (Pose ?o ?placement)
                       (PlaceConf ?o ?placement ?q2)
                       (BTraj ?o ?g ?pick_q ?q2 ?traj)
                       (not (UnsafeBTraj ?o ?g ?pick_q ?q2 ?traj))
                       )
    :effect (and (EmptyArm) (not (Picked ?o ?g ?pick_q)) (InLoadingRegion ?o) (AtPose ?o ?placement)))

    (:derived (UnsafeBTraj ?holding_o ?grasp ?pick_q ?place_q ?traj) (
        exists (?placed_o ?placed_p)
                 (and
                        (AtPose ?placed_o ?placed_p)
                        (TrajPoseCollision ?holding_o ?grasp ?pick_q ?placed_o ?placed_p ?place_q ?traj)
                        ;(not (= ?holding_o ?placed_o))
                        ;(InLoadingRegion ?placed_o)
                        ;(BTraj ?holding_o ?grasp ?pick_q ?place_q ?traj)
                        ;(GraspTransform ?holding_o ?grasp ?pick_q)
                        ;(Picked? holding_o)
                 )
    ))

)


